{
  "name": "CONTROLLERS: API Controller",
  "description": "Generates an API Controller for GET, POST, PUT, DELETE operations",
  "templateType": "API",
  "ProjectsRequired": "Api",
  "sortOrder": 6,
  "tasks": [
    {
      "name": "CONTROLLERS: $safeItemNameSingular$ Controller - POST",
      "actions": [
        {
          "name": "Create branch",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Checkout base branch",
              "instruction": "git checkout $basebranch$"
            },
            {
              "name": "Fetch the latest code",
              "instruction": "git pull origin"
            },
            {
              "name": "Create new branch",
              "instruction": "git checkout -b users/$username$/$controllers$-$safeItemNamePlural$-post"
            }
          ]
        },
        {
          "name": "CONTROLLERS: POST $safeItemNameSingular$",
          "executionFolder": "$projectFolder$",
          "fileItems": [
            {
              "template": "$templateFolder$\\Api\\Controllers\\001_ItemController.cs.txt",
              "target": "$projectFolder$\\$controllers$\\$safeItemNamePlural$Controller.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"CONTROLLERS: POST $safeItemNameSingular$\""
            }
          ]
        },
        {
          "name": "Push branch",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/$controllers$-$safeItemNamePlural$-post"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$infrastructureBuildProjectFolder$",
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create -d -t \"CONTROLLERS: $safeItemNameSingular$ Controller - POST\""
            }
          ]
        }
      ]
    },
    {
      "name": "CONTROLLERS: GET $safeItemNamePlural$",
      "actions": [
        {
          "name": "Create branch",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Checkout base branch",
              "instruction": "git checkout $basebranch$"
            },
            {
              "name": "Fetch the latest code",
              "instruction": "git pull origin"
            },
            {
              "name": "Create new branch",
              "instruction": "git checkout -b users/$username$/$controllers$-$safeItemNamePlural$-getall"
            }
          ]
        },
        {
          "name": "CONTROLLERS: GET ALL $safeItemNamePlural$",
          "executionFolder": "$projectFolder$",
          "fileItems": [
            {
              "template": "$templateFolder$\\Api\\Controllers\\002_ItemController.cs.txt",
              "target": "$projectFolder$\\$controllers$\\$safeItemNamePlural$Controller.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"CONTROLLERS: GET ALL $safeItemNamePlural$\""
            }
          ]
        },
        {
          "name": "Push branch",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/$controllers$-$safeItemNamePlural$-getall"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$infrastructureBuildProjectFolder$",
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create -d -t \"CONTROLLERS: GET $safeItemNamePlural$\""
            }
          ]
        }
      ]
    },
    {
      "name": "CONTROLLERS: GET $safeItemNameSingular$ By Id",
      "actions": [
        {
          "name": "Create branch",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Checkout base branch",
              "instruction": "git checkout $basebranch$"
            },
            {
              "name": "Fetch the latest code",
              "instruction": "git pull origin"
            },
            {
              "name": "Create new branch",
              "instruction": "git checkout -b users/$username$/$controllers$-$safeItemNamePlural$-getbyid"
            }
          ]
        },
        {
          "name": "CONTROLLERS: GET $safeItemNameSingular$ By Id",
          "executionFolder": "$projectFolder$",
          "fileItems": [
            {
              "template": "$templateFolder$\\Api\\Controllers\\003_ItemController.cs.txt",
              "target": "$projectFolder$\\$controllers$\\$safeItemNamePlural$Controller.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"CONTROLLERS: GET $safeItemNameSingular$ By Id\""
            }
          ]
        },
        {
          "name": "Push branch",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/$controllers$-$safeItemNamePlural$-getbyid"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$infrastructureBuildProjectFolder$",
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create -d -t \"CONTROLLERS: GET $safeItemNameSingular$ By Id\""
            }
          ]
        }
      ]
    },
    {
      "name": "CONTROLLERS: PUT $safeItemNameSingular$",
      "actions": [
        {
          "name": "Create branch",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Checkout base branch",
              "instruction": "git checkout $basebranch$"
            },
            {
              "name": "Fetch the latest code",
              "instruction": "git pull origin"
            },
            {
              "name": "Create new branch",
              "instruction": "git checkout -b users/$username$/$controllers$-$safeItemNamePlural$-put"
            }
          ]
        },
        {
          "name": "CONTROLLERS: PUT $safeItemNameSingular$",
          "executionFolder": "$projectFolder$",
          "fileItems": [
            {
              "template": "$templateFolder$\\Api\\Controllers\\004_ItemController.cs.txt",
              "target": "$projectFolder$\\$controllers$\\$safeItemNamePlural$Controller.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"CONTROLLERS: PUT $safeItemNameSingular$\""
            }
          ]
        },
        {
          "name": "Push branch",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/$controllers$-$safeItemNamePlural$-put"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$infrastructureBuildProjectFolder$",
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create -d -t \"CONTROLLERS: PUT $safeItemNameSingular$\""
            }
          ]
        }
      ]
    },
    {
      "name": "CONTROLLERS: DELETE $safeItemNameSingular$",
      "actions": [
        {
          "name": "Create branch",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Checkout base branch",
              "instruction": "git checkout $basebranch$"
            },
            {
              "name": "Fetch the latest code",
              "instruction": "git pull origin"
            },
            {
              "name": "Create new branch",
              "instruction": "git checkout -b users/$username$/$controllers$-$safeItemNamePlural$-delete"
            }
          ]
        },
        {
          "name": "CONTROLLERS: DELETE $safeItemNameSingular$",
          "executionFolder": "$projectFolder$",
          "fileItems": [
            {
              "template": "$templateFolder$\\Api\\Controllers\\005_ItemController.cs.txt",
              "target": "$projectFolder$\\$controllers$\\$safeItemNamePlural$Controller.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"CONTROLLERS: DELETE $safeItemNameSingular$\""
            }
          ]
        },
        {
          "name": "Push branch",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/$controllers$-$safeItemNamePlural$-delete"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$infrastructureBuildProjectFolder$",
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create -d -t \"CONTROLLERS: DELETE $safeItemNameSingular$\""
            }
          ]
        }
      ]
    }
  ],
  "CleanupTasks": [
    "* Confirm that formatting meets The Standard requirements i.e. 120 character rule and follow a process of Uglification Beautification process",
    "* Resolve / remove any TODO items in the task list",
    "* Verify that the solution builds and that all tests pass",
    "* Create a pull request for the respective branches and link the pull request to related issues by adding e.g. #CLOSES 123 to the description",
    "* Add screenshots to the pull request to show it working and handling the errors",
    "* Review Draft Pull Requests:",
    "  - CONTROLLERS: POST $safeItemNameSingular$",
    "  - CONTROLLERS: GET ALL $safeItemNamePlural$",
    "  - CONTROLLERS: GET $safeItemNameSingular$ By Id",
    "  - CONTROLLERS: PUT $safeItemNameSingular$",
    "  - CONTROLLERS: DELETE $safeItemNameSingular$"
  ]
}